import {assert} from 'chai'

import {Contract as BaseContract, GetTableRowsOptions, Table, TableCursor} from '@wharfkit/contract'
import {ABI, APIClient, Name, Serializer, Session} from '@wharfkit/session'
import {makeClient, mockSession} from '@wharfkit/mock-data'
import {_EosioToken as TokenContract} from '../data/contracts/token'

const client = makeClient('https://jungle4.greymass.com')

suite('classgen', function () {
    suite('class', function () {
        suite('constructor', function () {
            test('w/ client', async function () {
                assert.doesNotThrow(() => new Contract(client))
            })
            test('w/ session', async function () {
                assert.doesNotThrow(() => new Contract(mockSession))
            })
        })
        suite('accessors', function () {
            test('abi', async function () {
                const contract = new Contract(client)
                assert.instanceOf(contract.abi, ABI)
                assert.isDefined(contract.abi)
                if (contract.abi) {
                    assert.isTrue(contract.abi.equals(abi))
                }
            })
            test('account', async function () {
                const contract = new Contract(client)
                assert.instanceOf(contract.account, Name)
                assert.isDefined(contract.account)
                assert.isTrue(contract.account.equals('eosio.token'))
            })
            test('tables', async function () {
                const contract = new Contract(client)
                const cursor = contract.tables.account.first(1)
                assert.instanceOf(cursor, TableCursor)
            })
        })
    })
    suite('encoding', function () {
        test('raw -> abi', async function () {
            const test: ABI = Serializer.decode({data: encoded, type: ABI})
            assert.equal(test.version, 'eosio::abi/1.1')
            assert.isTrue(test.equals(abi))
        })
        test('abi -> raw', async function () {
            const test = String(Serializer.encode({object: abi, type: ABI}))
            assert.equal(encoded, test)
        })
    })
})

const encoded =
    ''

const abi = Serializer.decode({data: encoded, type: ABI})

class Contract extends BaseContract {
    // public actions = TokenContract.actions
    public types = TokenContract.types

    readonly tables = {
        account: Table.from({
            name: this.account,
            rowType: this.types.Account,
            fieldToIndex: TokenContract.tables.accounts.fieldToIndex,
            contract: this,
        }),
        stat: Table.from({
            name: this.account,
            rowType: this.types.Account,
            fieldToIndex: TokenContract.tables.stat.fieldToIndex,
            contract: this,
        }),
    }

    constructor(provider: APIClient | Session) {
        let client
        if (provider instanceof APIClient) {
            client = provider
        }
        if (provider instanceof Session) {
            client = provider.client
        }
        super({
            abi,
            client,
            name: 'eosio.token', // This should be static on the class?
        })
    }
}
