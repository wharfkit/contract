// generated by @greymass/abi2core

import {
    Asset,
    Checksum256,
    Name,
    Struct,
    TimePointSec,
    TypeAlias,
    UInt16,
    UInt32,
    UInt64,
    UInt8,
    Variant,
} from '@greymass/eosio'

@TypeAlias('blog_flags')
class BlogFlags extends UInt8 {}

@TypeAlias('link_flags')
class LinkFlags extends UInt8 {}

@TypeAlias('post_options')
class PostOptions extends UInt8 {}

@Struct.type('action_addcategory')
export class ActionAddcategory extends Struct {
    @Struct.field(Name) category!: Name
}

@Struct.type('action_addmoderator')
export class ActionAddmoderator extends Struct {
    @Struct.field(Name) account!: Name
}

@Struct.type('action_createblog')
export class ActionCreateblog extends Struct {
    @Struct.field(Name) author!: Name
}

@Struct.type('action_delcategory')
export class ActionDelcategory extends Struct {
    @Struct.field(Name) category!: Name
}

@Struct.type('action_deleteblog')
export class ActionDeleteblog extends Struct {
    @Struct.field(Name) author!: Name
    @Struct.field(UInt32) max_itr!: UInt32
}

@Struct.type('action_delmoderator')
export class ActionDelmoderator extends Struct {
    @Struct.field(Name) account!: Name
}

@Struct.type('action_freezeblog')
export class ActionFreezeblog extends Struct {
    @Struct.field(Name) author!: Name
    @Struct.field('string') reason!: string
}

@Struct.type('action_housekeeping')
export class ActionHousekeeping extends Struct {
    @Struct.field(UInt32) max_itr!: UInt32
}

@Struct.type('action_pinpost')
export class ActionPinpost extends Struct {
    @Struct.field(Name) author!: Name
    @Struct.field(Name) slug!: Name
}

@Struct.type('link')
export class Link extends Struct {
    @Struct.field('string') href!: string
    @Struct.field('string') title!: string
}

@Struct.type('bold')
export class Bold extends Struct {}

@Struct.type('italic')
export class Italic extends Struct {}

@Struct.type('code')
export class Code extends Struct {}

@Struct.type('strike')
export class Strike extends Struct {}

@Variant.type('variant_mark_nodes', [Link, Bold, Italic, Code, Strike])
class VariantMarkNodes extends Variant {}

@Struct.type('text')
export class Text extends Struct {
    @Struct.field('string') value!: string
    @Struct.field(VariantMarkNodes, {array: true}) marks!: VariantMarkNodes[]
}

@Struct.type('hard_break')
export class HardBreak extends Struct {}

@Variant.type('variant_inline_nodes', [Text, HardBreak])
class VariantInlineNodes extends Variant {}

@Struct.type('paragraph')
export class Paragraph extends Struct {
    @Struct.field(VariantInlineNodes, {array: true}) content!: VariantInlineNodes[]
}

@Struct.type('heading')
export class Heading extends Struct {
    @Struct.field('string') value!: string
    @Struct.field(UInt8) level!: UInt8
}

@Struct.type('image')
export class Image extends Struct {
    @Struct.field('string') src!: string
    @Struct.field(VariantInlineNodes, {array: true}) caption!: VariantInlineNodes[]
    @Struct.field(UInt8) layout!: UInt8
}

@Struct.type('permlink')
export class Permlink extends Struct {
    @Struct.field(Name) author!: Name
    @Struct.field(Name) slug!: Name
}

@Struct.type('linkref')
export class Linkref extends Struct {
    @Struct.field(Permlink) to!: Permlink
}

@Struct.type('quote')
export class Quote extends Struct {
    @Struct.field(VariantInlineNodes, {array: true}) content!: VariantInlineNodes[]
}

@Struct.type('code_block')
export class CodeBlock extends Struct {
    @Struct.field('string') code!: string
    @Struct.field('string') lang!: string
}

@Struct.type('divider')
export class Divider extends Struct {}

@Struct.type('list_item')
export class ListItem extends Struct {
    @Struct.field(VariantInlineNodes, {array: true}) content!: VariantInlineNodes[]
}

@Struct.type('list')
export class List extends Struct {
    @Struct.field(UInt8) type!: UInt8
    @Struct.field(ListItem, {array: true}) items!: ListItem[]
}

@Variant.type('variant_block_nodes', [
    Paragraph,
    Heading,
    Image,
    Linkref,
    Quote,
    CodeBlock,
    Divider,
    List,
])
class VariantBlockNodes extends Variant {}

@Struct.type('document')
export class Document extends Struct {
    @Struct.field(VariantBlockNodes, {array: true}) content!: VariantBlockNodes[]
}

@Struct.type('color')
export class Color extends Struct {
    @Struct.field(UInt8) r!: UInt8
    @Struct.field(UInt8) g!: UInt8
    @Struct.field(UInt8) b!: UInt8
}

@Struct.type('triangle')
export class Triangle extends Struct {
    @Struct.field(UInt8) ax!: UInt8
    @Struct.field(UInt8) ay!: UInt8
    @Struct.field(UInt8) bx!: UInt8
    @Struct.field(UInt8) by!: UInt8
    @Struct.field(UInt8) cx!: UInt8
    @Struct.field(UInt8) cy!: UInt8
    @Struct.field(Color) color!: Color
}

@Struct.type('geometrize_triangles')
export class GeometrizeTriangles extends Struct {
    @Struct.field(Color) base!: Color
    @Struct.field(Triangle, {array: true}) triangles!: Triangle[]
}

@Variant.type('variant_placeholder', [Color, GeometrizeTriangles])
class VariantPlaceholder extends Variant {}

@Struct.type('image_info')
export class ImageInfo extends Struct {
    @Struct.field(UInt16) width!: UInt16
    @Struct.field(UInt16) height!: UInt16
    @Struct.field(VariantPlaceholder) placeholder!: VariantPlaceholder
}

@Struct.type('pair_string_image_info')
export class PairStringImageInfo extends Struct {
    @Struct.field('string') key!: string
    @Struct.field(ImageInfo) value!: ImageInfo
}

@Struct.type('metadata')
export class Metadata extends Struct {
    @Struct.field('string?') image?: string
    @Struct.field('string?') summary?: string
    @Struct.field(PairStringImageInfo, {array: true}) image_info!: PairStringImageInfo[]
}

@Struct.type('action_post')
export class ActionPost extends Struct {
    @Struct.field(Name) author!: Name
    @Struct.field('string') title!: string
    @Struct.field(Document) doc!: Document
    @Struct.field(Metadata, {optional: true}) metadata?: Metadata
}

@Struct.type('action_postedit')
export class ActionPostedit extends Struct {
    @Struct.field(Name) author!: Name
    @Struct.field('string?') new_title?: string
    @Struct.field('string?') patch?: string
    @Struct.field(Metadata, {optional: true}) new_metadata?: Metadata
}

@Struct.type('action_profile')
export class ActionProfile extends Struct {
    @Struct.field(Name) author!: Name
    @Struct.field('string') name!: string
    @Struct.field('string') bio!: string
    @Struct.field('string?') image?: string
}

@Struct.type('tx_ref')
export class TxRef extends Struct {
    @Struct.field(UInt32) block_num!: UInt32
    @Struct.field(Checksum256) transaction_id!: Checksum256
}

@Struct.type('action_publish')
export class ActionPublish extends Struct {
    @Struct.field(Permlink) permlink!: Permlink
    @Struct.field(TxRef) tx!: TxRef
    @Struct.field(Name) category!: Name
    @Struct.field(PostOptions) options!: PostOptions
    @Struct.field(Permlink, {array: true}) links!: Permlink[]
}

@Struct.type('action_publishedit')
export class ActionPublishedit extends Struct {
    @Struct.field(Permlink) permlink!: Permlink
    @Struct.field(TxRef) edit_tx!: TxRef
}

@Struct.type('action_setlinkflags')
export class ActionSetlinkflags extends Struct {
    @Struct.field(UInt64) link_id!: UInt64
    @Struct.field(LinkFlags) new_flags!: LinkFlags
}

@Struct.type('action_setprofile')
export class ActionSetprofile extends Struct {
    @Struct.field(Name) author!: Name
    @Struct.field(TxRef) profile!: TxRef
}

@Struct.type('action_unfreezeblog')
export class ActionUnfreezeblog extends Struct {
    @Struct.field(Name) author!: Name
}

@Struct.type('action_unpinpost')
export class ActionUnpinpost extends Struct {
    @Struct.field(Name) author!: Name
    @Struct.field(Name) slug!: Name
}

@Struct.type('action_unpublish')
export class ActionUnpublish extends Struct {
    @Struct.field(Permlink) permlink!: Permlink
}

@Struct.type('action_updatescore')
export class ActionUpdatescore extends Struct {
    @Struct.field(Permlink) post_permlink!: Permlink
}

@Struct.type('reward_stat')
export class RewardStat extends Struct {
    @Struct.field(UInt32) count!: UInt32
    @Struct.field(UInt64) amount!: UInt64
}

@Struct.type('blog_stats')
export class BlogStats extends Struct {
    @Struct.field(UInt32) total_posts!: UInt32
    @Struct.field(RewardStat) endorsements_received!: RewardStat
    @Struct.field(RewardStat) endorsements_sent!: RewardStat
    @Struct.field(RewardStat) incoming_linkbacks!: RewardStat
    @Struct.field(RewardStat) outgoing_linkbacks!: RewardStat
}

@Struct.type('future_extensions')
export class FutureExtensions extends Struct {}

@Struct.type('blog_row')
export class BlogRow extends Struct {
    @Struct.field(Name) author!: Name
    @Struct.field(BlogFlags) flags!: BlogFlags
    @Struct.field(Name, {array: true}) pinned!: Name[]
    @Struct.field(BlogStats) stats!: BlogStats
    @Struct.field(TxRef, {optional: true}) profile?: TxRef
    @Struct.field(FutureExtensions, {array: true}) extensions!: FutureExtensions[]
}

@Struct.type('category_stat')
export class CategoryStat extends Struct {
    @Struct.field(RewardStat) endorsements!: RewardStat
    @Struct.field(RewardStat) linkbacks!: RewardStat
}

@Struct.type('link_row')
export class LinkRow extends Struct {
    @Struct.field(UInt64) id!: UInt64
    @Struct.field(Permlink) from!: Permlink
    @Struct.field(Permlink) to!: Permlink
    @Struct.field(LinkFlags) flags!: LinkFlags
    @Struct.field(Asset, {optional: true}) payment?: Asset
}

@Struct.type('pair_name_category_stat')
export class PairNameCategoryStat extends Struct {
    @Struct.field(Name) key!: Name
    @Struct.field(CategoryStat) value!: CategoryStat
}

@Struct.type('post_ref')
export class PostRef extends Struct {
    @Struct.field(Permlink) permlink!: Permlink
    @Struct.field(TimePointSec) timestamp!: TimePointSec
    @Struct.field(Name) category!: Name
    @Struct.field(PostOptions) options!: PostOptions
    @Struct.field(TxRef) tx!: TxRef
    @Struct.field(TxRef, {optional: true}) edit_tx?: TxRef
    @Struct.field(RewardStat, {optional: true}) endorsements?: RewardStat
    @Struct.field(FutureExtensions, {array: true}) extensions!: FutureExtensions[]
}

@Struct.type('post_row')
export class PostRow extends Struct {
    @Struct.field(PostRef) ref!: PostRef
    @Struct.field(FutureExtensions, {array: true}) extensions!: FutureExtensions[]
}

@Struct.type('state')
export class State extends Struct {
    @Struct.field(Name, {array: true}) moderators!: Name[]
    @Struct.field(PairNameCategoryStat, {array: true}) categories!: PairNameCategoryStat[]
}

@Struct.type('trending_row')
export class TrendingRow extends Struct {
    @Struct.field(UInt64) id!: UInt64
    @Struct.field(UInt64) score!: UInt64
    @Struct.field(PostRef) ref!: PostRef
    @Struct.field(FutureExtensions, {array: true}) extensions!: FutureExtensions[]
}
