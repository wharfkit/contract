{
    "request": {
        "path": "https://eos.greymass.com/v1/chain/get_raw_abi",
        "params": {
            "method": "POST",
            "body": "{\"account_name\":\"decentiumorg\"}"
        }
    },
    "status": 200,
    "json": {
        "account_name": "decentiumorg",
        "code_hash": "b40998cf742899a006d9a0070c9551652bcb00157f64e25511ba11971c688ce8",
        "abi_hash": "645913c182b7350879d1b41ad9ec141cf29abc642e8daaaeb91254b4233ce99e",
        "abi": "="
    },
    "text": "{\"account_name\":\"decentiumorg\",\"code_hash\":\"b40998cf742899a006d9a0070c9551652bcb00157f64e25511ba11971c688ce8\",\"abi_hash\":\"645913c182b7350879d1b41ad9ec141cf29abc642e8daaaeb91254b4233ce99e\",\"abi\":\"=\"}"
}